#logging.level.org.springframework=DEBUG
#logging.level.org.springframework.web=DEBUG
#logging.level.com.com.steereengineering.services.PhoneListServiceImpl=DEBUG
##logging.level.org.hibernate=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE



# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57Dialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect 


# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
#spring.datasource.initialization-mode=always

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)

#spring.datasource.platform=postgres
#spring.datasource.url=jdbc:postgresql://192.168.50.251:5432/steere
#spring.datasource.url=jdbc:postgresql://localhost:5432/steere
#spring.datasource.username=steere
#spring.datasource.password=!Q2w3e$R

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.platform=mysql
#spring.datasource.url=jdbc:postgresql://192.168.50.251:5432/steere
spring.datasource.url=jdbc:mysql://localhost:3306/steere?autoReconnect=true&useSSL=false
spring.datasource.username=steere
spring.datasource.password=!Q2w3e$R
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?